@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<<<<<<< master
<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
        <li data-target="#myCarousel" data-slide-to="3"></li>
    </ol>
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how to build ASP.NET apps that can run anywhere.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525028&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner2.svg" alt="Visual Studio" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    There are powerful new features in Visual Studio for building modern web apps.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525030&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner3.svg" alt="Package Management" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Bring in libraries from NuGet and npm, and automate tasks using Grunt or Gulp.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525029&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner4.svg" alt="Microsoft Azure" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how Microsoft's Azure cloud platform allows you to build, deploy, and scale web apps.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525027&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
=======
<div id="chat-area">
    <ul id="messages"></ul>
    <ul id="users">
        <li><b>Users online</b></li>
    </ul>
    <div class="clear">
    </div>
    <form id="sendmessage" action="#">
        <input type="text" id="new-message" />
        <input type="submit" id="send" value="Send" class="send" />
    </form>
>>>>>>> local
</div>
<script src="https://unpkg.com/@@aspnet/signalr-client@1.0.0-alpha2-final/dist/browser/signalr-clientES5-1.0.0-alpha2-final.js" integrity="sha384-d0DyKu5pTAEIv8W1GkHAD2OZyyf/uvydsCOz3S+LUII6s/ZoO0VidAVIau06/nzk" crossorigin="anonymous"></script>
<script>
let transportType = signalR.TransportType[getParameterByName('transport')] || signalR.TransportType.WebSockets;
let logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
let connection = new signalR.HubConnection('/chat', { transport: transportType, logger: logger });

<<<<<<< master
<div class="row">
    <div class="col-md-3">
        <h2>Application uses</h2>
        <ul>
            <li>Sample pages using ASP.NET Core Razor Pages</li>
            <li>Theming using <a href="https://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>How to</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?linkid=852130">Working with Razor Pages.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699315">Manage User Secrets using Secret Manager.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699316">Use logging to log a message.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699317">Add packages using NuGet.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699319">Target development, staging or production environment.</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Overview</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=518008">Conceptual overview of what is ASP.NET Core</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699320">Fundamentals of ASP.NET Core such as Startup and middleware.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=398602">Working with Data</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=398603">Security</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699321">Client side development</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699322">Develop on different platforms</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699323">Read more on the documentation site</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Run &amp; Deploy</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=517851">Run your app</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=517853">Run tools such as EF migrations and more</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=398609">Publish to Microsoft Azure App Service</a></li>
        </ul>
    </div>
</div>
=======
connection.onclose(e => {
    if (e) {
        appendLine('Connection closed with error: ' + e, 'red');
    }
    else {
        appendLine('Disconnected', 'green');
    }
});

connection.on('UserJoined', user => {
    appendLine('User ' + user.name + ' joined the chat');
    addUserOnline(user);
});

connection.on('UserLeft', user => {
    appendLine('User ' + user.name + ' left the chat');
    document.getElementById(user.connectionId).outerHTML = '';
});

connection.on('Send', (userName, message) => {
    var nameElement = document.createElement('b');
    nameElement.innerText = userName + ':';

    var msgElement = document.createElement('span');
    msgElement.innerText = ' ' + message;

    var child = document.createElement('li');
    child.appendChild(nameElement);
    child.appendChild(msgElement);
    document.getElementById('messages').appendChild(child);
});

connection.start().catch(err => appendLine(err, 'red'));

document.getElementById('sendmessage').addEventListener('submit', event => {
    let data = document.getElementById('new-message').value;
    connection.invoke('Send', data).catch(err => appendLine(err, 'red'));
    event.preventDefault();
});

function appendLine(line, color) {
    let child = document.createElement('li');
    if (color) {
        child.style.color = color;
    }
    child.innerText = line;
    document.getElementById('messages').appendChild(child);
};

function addUserOnline(user) {
    if (document.getElementById(user.connectionId)) {
        return;
    }
    var userLi = document.createElement('li');
    userLi.innerText = `${user.name} (${user.connectionId})`;
    userLi.id = user.connectionId;
    document.getElementById('users').appendChild(userLi);
}

function getParameterByName(name, url) {
    if (!url) {
        url = window.location.href;
    }
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
};

</script>
>>>>>>> local
